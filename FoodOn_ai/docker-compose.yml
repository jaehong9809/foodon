version: '3.8'

services:
  fastapi:
    build:
      context: ./fastapi
    ports:
      - "8000:8000"
    restart: always
    environment:
      - TZ=Asia/Seoul

  airflow-webserver:
    build:
      context: ./airflow
    restart: always
    depends_on:
      - airflow-scheduler
      - airflow-postgres
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow-postgres:5432/airflow
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__WEBSERVER__EXPOSE_CONFIG=True
      - AIRFLOW__WEBSERVER__WEB_SERVER_PORT=8787 
    ports:
      - "8787:8787"  
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
    command: webserver

  airflow-scheduler:
    build:
      context: ./airflow
    restart: always
    depends_on:
      - airflow-postgres
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow-postgres:5432/airflow
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
    command: scheduler

  airflow-postgres:
    image: postgres:13
    restart: always
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
  
  mlflow:
    image: ghcr.io/mlflow/mlflow
    command: mlflow ui --host 0.0.0.0 --port 5000
    ports:
      - "5000:5000"
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5000
    volumes:
      - ./mlflow:/mlflow/mlruns

volumes:
  postgres-db-volume:
